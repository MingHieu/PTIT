model User {
    id                Int                @id @default(autoincrement())
    email             String             @unique
    password          String?
    name              String?
    avatar            File?
    avatarUrl         String?
    isVerify          Boolean            @default(false)
    accounts          Account[]
    students          Student[]
    notifications     Notification[]
    classrooms        Classroom[]
    classroomRequests ClassroomRequest[]
    settings          UserSettings[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Account {
    id                Int     @id @default(autoincrement())
    provider          String
    providerAccountId String
    accessToken       String?
    refreshToken      String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId            Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([provider, providerAccountId])
}

model UserSettings {
    key   String
    value Json

    user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int

    @@id([userId, key])
}
